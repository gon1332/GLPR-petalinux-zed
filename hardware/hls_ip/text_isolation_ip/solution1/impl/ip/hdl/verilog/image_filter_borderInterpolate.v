// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module image_filter_borderInterpolate (
        ap_clk,
        ap_rst,
        p,
        len,
        ap_return,
        ap_ce
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv13_1FFE = 13'b1111111111110;
parameter    ap_const_logic_0 = 1'b0;

input   ap_clk;
input   ap_rst;
input  [11:0] p;
input  [10:0] len;
output  [12:0] ap_return;
input   ap_ce;

wire   [11:0] p_p2_fu_91_p3;
reg   [11:0] p_p2_reg_198;
wire   [0:0] tmp_3_fu_103_p2;
reg   [0:0] tmp_3_reg_203;
wire   [0:0] sel_tmp2_fu_145_p2;
reg   [0:0] sel_tmp2_reg_208;
wire   [0:0] sel_tmp6_demorgan_fu_151_p2;
reg   [0:0] sel_tmp6_demorgan_reg_213;
wire   [12:0] newSel9_fu_157_p3;
reg   [12:0] newSel9_reg_218;
wire   [0:0] tmp_fu_37_p3;
wire   [11:0] len_cast4_cast_fu_51_p1;
wire   [0:0] tmp_s_fu_55_p2;
wire   [0:0] rev_fu_45_p2;
wire   [0:0] tmp_80_fu_77_p3;
wire   [11:0] p_assign_fu_85_p2;
wire   [11:0] tmp_4_fu_109_p3;
wire   [12:0] tmp_4_cast_cast_fu_117_p1;
wire   [12:0] tmp_5_fu_121_p2;
wire   [12:0] p_p2_cast_cast_fu_99_p1;
wire   [0:0] tmp_not_fu_133_p2;
wire   [0:0] tmp_1_fu_71_p2;
wire   [0:0] sel_tmp1_fu_139_p2;
wire   [0:0] or_cond_82_fu_61_p2;
wire  signed [12:0] p_cast_cast_fu_67_p1;
wire   [12:0] p_assign_1_fu_127_p2;
wire   [0:0] sel_tmp6_fu_165_p2;
wire   [0:0] sel_tmp7_fu_170_p2;
wire   [11:0] newSel_fu_175_p3;
wire   [0:0] or_cond_fu_186_p2;
wire   [12:0] newSel_cast_fu_182_p1;




/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_ce)) begin
        newSel9_reg_218 <= newSel9_fu_157_p3;
        p_p2_reg_198 <= p_p2_fu_91_p3;
        sel_tmp2_reg_208 <= sel_tmp2_fu_145_p2;
        sel_tmp6_demorgan_reg_213 <= sel_tmp6_demorgan_fu_151_p2;
        tmp_3_reg_203 <= tmp_3_fu_103_p2;
    end
end
assign ap_return = ((or_cond_fu_186_p2)? newSel_cast_fu_182_p1: newSel9_reg_218);
assign len_cast4_cast_fu_51_p1 = len;
assign newSel9_fu_157_p3 = ((or_cond_82_fu_61_p2)? p_cast_cast_fu_67_p1: p_assign_1_fu_127_p2);
assign newSel_cast_fu_182_p1 = newSel_fu_175_p3;
assign newSel_fu_175_p3 = ((sel_tmp7_fu_170_p2)? p_p2_reg_198: ap_const_lv12_0);
assign or_cond_82_fu_61_p2 = (tmp_s_fu_55_p2 & rev_fu_45_p2);
assign or_cond_fu_186_p2 = (sel_tmp7_fu_170_p2 | sel_tmp2_reg_208);
assign p_assign_1_fu_127_p2 = (tmp_5_fu_121_p2 - p_p2_cast_cast_fu_99_p1);
assign p_assign_fu_85_p2 = (ap_const_lv12_0 - p);
assign p_cast_cast_fu_67_p1 = $signed(p);
assign p_p2_cast_cast_fu_99_p1 = p_p2_fu_91_p3;
assign p_p2_fu_91_p3 = ((tmp_80_fu_77_p3)? p_assign_fu_85_p2: p);
assign rev_fu_45_p2 = (tmp_fu_37_p3 ^ ap_const_lv1_1);
assign sel_tmp1_fu_139_p2 = (tmp_fu_37_p3 | tmp_not_fu_133_p2);
assign sel_tmp2_fu_145_p2 = (tmp_1_fu_71_p2 & sel_tmp1_fu_139_p2);
assign sel_tmp6_demorgan_fu_151_p2 = (or_cond_82_fu_61_p2 | tmp_1_fu_71_p2);
assign sel_tmp6_fu_165_p2 = (sel_tmp6_demorgan_reg_213 ^ ap_const_lv1_1);
assign sel_tmp7_fu_170_p2 = (tmp_3_reg_203 & sel_tmp6_fu_165_p2);
assign tmp_1_fu_71_p2 = (len == ap_const_lv11_1? 1'b1: 1'b0);
assign tmp_3_fu_103_p2 = (p_p2_fu_91_p3 < len_cast4_cast_fu_51_p1? 1'b1: 1'b0);
assign tmp_4_cast_cast_fu_117_p1 = tmp_4_fu_109_p3;
assign tmp_4_fu_109_p3 = {{len}, {ap_const_lv1_0}};
assign tmp_5_fu_121_p2 = ($signed(tmp_4_cast_cast_fu_117_p1) + $signed(ap_const_lv13_1FFE));
assign tmp_80_fu_77_p3 = p[ap_const_lv32_B];
assign tmp_fu_37_p3 = p[ap_const_lv32_B];
assign tmp_not_fu_133_p2 = (tmp_s_fu_55_p2 ^ ap_const_lv1_1);
assign tmp_s_fu_55_p2 = ($signed(len_cast4_cast_fu_51_p1) > $signed(p)? 1'b1: 1'b0);


endmodule //image_filter_borderInterpolate

