// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "image_filter_borderInterpolate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic image_filter_borderInterpolate::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> image_filter_borderInterpolate::ap_const_lv32_B = "1011";
const sc_lv<1> image_filter_borderInterpolate::ap_const_lv1_1 = "1";
const sc_lv<11> image_filter_borderInterpolate::ap_const_lv11_1 = "1";
const sc_lv<12> image_filter_borderInterpolate::ap_const_lv12_0 = "000000000000";
const sc_lv<1> image_filter_borderInterpolate::ap_const_lv1_0 = "0";
const sc_lv<13> image_filter_borderInterpolate::ap_const_lv13_1FFE = "1111111111110";
const sc_logic image_filter_borderInterpolate::ap_const_logic_0 = sc_dt::Log_0;

image_filter_borderInterpolate::image_filter_borderInterpolate(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_ce );
    sensitive << ( newSel9_reg_218 );
    sensitive << ( or_cond_fu_186_p2 );
    sensitive << ( newSel_cast_fu_182_p1 );

    SC_METHOD(thread_len_cast4_cast_fu_51_p1);
    sensitive << ( len );

    SC_METHOD(thread_newSel9_fu_157_p3);
    sensitive << ( or_cond_82_fu_61_p2 );
    sensitive << ( p_cast_cast_fu_67_p1 );
    sensitive << ( p_assign_1_fu_127_p2 );

    SC_METHOD(thread_newSel_cast_fu_182_p1);
    sensitive << ( newSel_fu_175_p3 );

    SC_METHOD(thread_newSel_fu_175_p3);
    sensitive << ( p_p2_reg_198 );
    sensitive << ( sel_tmp7_fu_170_p2 );

    SC_METHOD(thread_or_cond_82_fu_61_p2);
    sensitive << ( tmp_s_fu_55_p2 );
    sensitive << ( rev_fu_45_p2 );

    SC_METHOD(thread_or_cond_fu_186_p2);
    sensitive << ( sel_tmp2_reg_208 );
    sensitive << ( sel_tmp7_fu_170_p2 );

    SC_METHOD(thread_p_assign_1_fu_127_p2);
    sensitive << ( tmp_5_fu_121_p2 );
    sensitive << ( p_p2_cast_cast_fu_99_p1 );

    SC_METHOD(thread_p_assign_fu_85_p2);
    sensitive << ( p );

    SC_METHOD(thread_p_cast_cast_fu_67_p1);
    sensitive << ( p );

    SC_METHOD(thread_p_p2_cast_cast_fu_99_p1);
    sensitive << ( p_p2_fu_91_p3 );

    SC_METHOD(thread_p_p2_fu_91_p3);
    sensitive << ( p );
    sensitive << ( tmp_80_fu_77_p3 );
    sensitive << ( p_assign_fu_85_p2 );

    SC_METHOD(thread_rev_fu_45_p2);
    sensitive << ( tmp_fu_37_p3 );

    SC_METHOD(thread_sel_tmp1_fu_139_p2);
    sensitive << ( tmp_fu_37_p3 );
    sensitive << ( tmp_not_fu_133_p2 );

    SC_METHOD(thread_sel_tmp2_fu_145_p2);
    sensitive << ( tmp_1_fu_71_p2 );
    sensitive << ( sel_tmp1_fu_139_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_151_p2);
    sensitive << ( tmp_1_fu_71_p2 );
    sensitive << ( or_cond_82_fu_61_p2 );

    SC_METHOD(thread_sel_tmp6_fu_165_p2);
    sensitive << ( sel_tmp6_demorgan_reg_213 );

    SC_METHOD(thread_sel_tmp7_fu_170_p2);
    sensitive << ( tmp_3_reg_203 );
    sensitive << ( sel_tmp6_fu_165_p2 );

    SC_METHOD(thread_tmp_1_fu_71_p2);
    sensitive << ( len );
    sensitive << ( ap_ce );

    SC_METHOD(thread_tmp_3_fu_103_p2);
    sensitive << ( p_p2_fu_91_p3 );
    sensitive << ( ap_ce );
    sensitive << ( len_cast4_cast_fu_51_p1 );

    SC_METHOD(thread_tmp_4_cast_cast_fu_117_p1);
    sensitive << ( tmp_4_fu_109_p3 );

    SC_METHOD(thread_tmp_4_fu_109_p3);
    sensitive << ( len );

    SC_METHOD(thread_tmp_5_fu_121_p2);
    sensitive << ( tmp_4_cast_cast_fu_117_p1 );

    SC_METHOD(thread_tmp_80_fu_77_p3);
    sensitive << ( p );

    SC_METHOD(thread_tmp_fu_37_p3);
    sensitive << ( p );

    SC_METHOD(thread_tmp_not_fu_133_p2);
    sensitive << ( tmp_s_fu_55_p2 );

    SC_METHOD(thread_tmp_s_fu_55_p2);
    sensitive << ( p );
    sensitive << ( ap_ce );
    sensitive << ( len_cast4_cast_fu_51_p1 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "image_filter_borderInterpolate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, p, "(port)p");
    sc_trace(mVcdFile, len, "(port)len");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, p_p2_fu_91_p3, "p_p2_fu_91_p3");
    sc_trace(mVcdFile, p_p2_reg_198, "p_p2_reg_198");
    sc_trace(mVcdFile, tmp_3_fu_103_p2, "tmp_3_fu_103_p2");
    sc_trace(mVcdFile, tmp_3_reg_203, "tmp_3_reg_203");
    sc_trace(mVcdFile, sel_tmp2_fu_145_p2, "sel_tmp2_fu_145_p2");
    sc_trace(mVcdFile, sel_tmp2_reg_208, "sel_tmp2_reg_208");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_151_p2, "sel_tmp6_demorgan_fu_151_p2");
    sc_trace(mVcdFile, sel_tmp6_demorgan_reg_213, "sel_tmp6_demorgan_reg_213");
    sc_trace(mVcdFile, newSel9_fu_157_p3, "newSel9_fu_157_p3");
    sc_trace(mVcdFile, newSel9_reg_218, "newSel9_reg_218");
    sc_trace(mVcdFile, tmp_fu_37_p3, "tmp_fu_37_p3");
    sc_trace(mVcdFile, len_cast4_cast_fu_51_p1, "len_cast4_cast_fu_51_p1");
    sc_trace(mVcdFile, tmp_s_fu_55_p2, "tmp_s_fu_55_p2");
    sc_trace(mVcdFile, rev_fu_45_p2, "rev_fu_45_p2");
    sc_trace(mVcdFile, tmp_80_fu_77_p3, "tmp_80_fu_77_p3");
    sc_trace(mVcdFile, p_assign_fu_85_p2, "p_assign_fu_85_p2");
    sc_trace(mVcdFile, tmp_4_fu_109_p3, "tmp_4_fu_109_p3");
    sc_trace(mVcdFile, tmp_4_cast_cast_fu_117_p1, "tmp_4_cast_cast_fu_117_p1");
    sc_trace(mVcdFile, tmp_5_fu_121_p2, "tmp_5_fu_121_p2");
    sc_trace(mVcdFile, p_p2_cast_cast_fu_99_p1, "p_p2_cast_cast_fu_99_p1");
    sc_trace(mVcdFile, tmp_not_fu_133_p2, "tmp_not_fu_133_p2");
    sc_trace(mVcdFile, tmp_1_fu_71_p2, "tmp_1_fu_71_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_139_p2, "sel_tmp1_fu_139_p2");
    sc_trace(mVcdFile, or_cond_82_fu_61_p2, "or_cond_82_fu_61_p2");
    sc_trace(mVcdFile, p_cast_cast_fu_67_p1, "p_cast_cast_fu_67_p1");
    sc_trace(mVcdFile, p_assign_1_fu_127_p2, "p_assign_1_fu_127_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_165_p2, "sel_tmp6_fu_165_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_170_p2, "sel_tmp7_fu_170_p2");
    sc_trace(mVcdFile, newSel_fu_175_p3, "newSel_fu_175_p3");
    sc_trace(mVcdFile, or_cond_fu_186_p2, "or_cond_fu_186_p2");
    sc_trace(mVcdFile, newSel_cast_fu_182_p1, "newSel_cast_fu_182_p1");
#endif

    }
}

image_filter_borderInterpolate::~image_filter_borderInterpolate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void image_filter_borderInterpolate::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
        newSel9_reg_218 = newSel9_fu_157_p3.read();
        p_p2_reg_198 = p_p2_fu_91_p3.read();
        sel_tmp2_reg_208 = sel_tmp2_fu_145_p2.read();
        sel_tmp6_demorgan_reg_213 = sel_tmp6_demorgan_fu_151_p2.read();
        tmp_3_reg_203 = tmp_3_fu_103_p2.read();
    }
}

void image_filter_borderInterpolate::thread_ap_return() {
    ap_return = (!or_cond_fu_186_p2.read()[0].is_01())? sc_lv<13>(): ((or_cond_fu_186_p2.read()[0].to_bool())? newSel_cast_fu_182_p1.read(): newSel9_reg_218.read());
}

void image_filter_borderInterpolate::thread_len_cast4_cast_fu_51_p1() {
    len_cast4_cast_fu_51_p1 = esl_zext<12,11>(len.read());
}

void image_filter_borderInterpolate::thread_newSel9_fu_157_p3() {
    newSel9_fu_157_p3 = (!or_cond_82_fu_61_p2.read()[0].is_01())? sc_lv<13>(): ((or_cond_82_fu_61_p2.read()[0].to_bool())? p_cast_cast_fu_67_p1.read(): p_assign_1_fu_127_p2.read());
}

void image_filter_borderInterpolate::thread_newSel_cast_fu_182_p1() {
    newSel_cast_fu_182_p1 = esl_zext<13,12>(newSel_fu_175_p3.read());
}

void image_filter_borderInterpolate::thread_newSel_fu_175_p3() {
    newSel_fu_175_p3 = (!sel_tmp7_fu_170_p2.read()[0].is_01())? sc_lv<12>(): ((sel_tmp7_fu_170_p2.read()[0].to_bool())? p_p2_reg_198.read(): ap_const_lv12_0);
}

void image_filter_borderInterpolate::thread_or_cond_82_fu_61_p2() {
    or_cond_82_fu_61_p2 = (tmp_s_fu_55_p2.read() & rev_fu_45_p2.read());
}

void image_filter_borderInterpolate::thread_or_cond_fu_186_p2() {
    or_cond_fu_186_p2 = (sel_tmp7_fu_170_p2.read() | sel_tmp2_reg_208.read());
}

void image_filter_borderInterpolate::thread_p_assign_1_fu_127_p2() {
    p_assign_1_fu_127_p2 = (!tmp_5_fu_121_p2.read().is_01() || !p_p2_cast_cast_fu_99_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_5_fu_121_p2.read()) - sc_biguint<13>(p_p2_cast_cast_fu_99_p1.read()));
}

void image_filter_borderInterpolate::thread_p_assign_fu_85_p2() {
    p_assign_fu_85_p2 = (!ap_const_lv12_0.is_01() || !p.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_0) - sc_biguint<12>(p.read()));
}

void image_filter_borderInterpolate::thread_p_cast_cast_fu_67_p1() {
    p_cast_cast_fu_67_p1 = esl_sext<13,12>(p.read());
}

void image_filter_borderInterpolate::thread_p_p2_cast_cast_fu_99_p1() {
    p_p2_cast_cast_fu_99_p1 = esl_zext<13,12>(p_p2_fu_91_p3.read());
}

void image_filter_borderInterpolate::thread_p_p2_fu_91_p3() {
    p_p2_fu_91_p3 = (!tmp_80_fu_77_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_80_fu_77_p3.read()[0].to_bool())? p_assign_fu_85_p2.read(): p.read());
}

void image_filter_borderInterpolate::thread_rev_fu_45_p2() {
    rev_fu_45_p2 = (tmp_fu_37_p3.read() ^ ap_const_lv1_1);
}

void image_filter_borderInterpolate::thread_sel_tmp1_fu_139_p2() {
    sel_tmp1_fu_139_p2 = (tmp_fu_37_p3.read() | tmp_not_fu_133_p2.read());
}

void image_filter_borderInterpolate::thread_sel_tmp2_fu_145_p2() {
    sel_tmp2_fu_145_p2 = (tmp_1_fu_71_p2.read() & sel_tmp1_fu_139_p2.read());
}

void image_filter_borderInterpolate::thread_sel_tmp6_demorgan_fu_151_p2() {
    sel_tmp6_demorgan_fu_151_p2 = (or_cond_82_fu_61_p2.read() | tmp_1_fu_71_p2.read());
}

void image_filter_borderInterpolate::thread_sel_tmp6_fu_165_p2() {
    sel_tmp6_fu_165_p2 = (sel_tmp6_demorgan_reg_213.read() ^ ap_const_lv1_1);
}

void image_filter_borderInterpolate::thread_sel_tmp7_fu_170_p2() {
    sel_tmp7_fu_170_p2 = (tmp_3_reg_203.read() & sel_tmp6_fu_165_p2.read());
}

void image_filter_borderInterpolate::thread_tmp_1_fu_71_p2() {
    tmp_1_fu_71_p2 = (!len.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<1>(): sc_lv<1>(len.read() == ap_const_lv11_1);
}

void image_filter_borderInterpolate::thread_tmp_3_fu_103_p2() {
    tmp_3_fu_103_p2 = (!p_p2_fu_91_p3.read().is_01() || !len_cast4_cast_fu_51_p1.read().is_01())? sc_lv<1>(): (sc_biguint<12>(p_p2_fu_91_p3.read()) < sc_biguint<12>(len_cast4_cast_fu_51_p1.read()));
}

void image_filter_borderInterpolate::thread_tmp_4_cast_cast_fu_117_p1() {
    tmp_4_cast_cast_fu_117_p1 = esl_zext<13,12>(tmp_4_fu_109_p3.read());
}

void image_filter_borderInterpolate::thread_tmp_4_fu_109_p3() {
    tmp_4_fu_109_p3 = esl_concat<11,1>(len.read(), ap_const_lv1_0);
}

void image_filter_borderInterpolate::thread_tmp_5_fu_121_p2() {
    tmp_5_fu_121_p2 = (!tmp_4_cast_cast_fu_117_p1.read().is_01() || !ap_const_lv13_1FFE.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_4_cast_cast_fu_117_p1.read()) + sc_bigint<13>(ap_const_lv13_1FFE));
}

void image_filter_borderInterpolate::thread_tmp_80_fu_77_p3() {
    tmp_80_fu_77_p3 = p.read().range(11, 11);
}

void image_filter_borderInterpolate::thread_tmp_fu_37_p3() {
    tmp_fu_37_p3 = p.read().range(11, 11);
}

void image_filter_borderInterpolate::thread_tmp_not_fu_133_p2() {
    tmp_not_fu_133_p2 = (tmp_s_fu_55_p2.read() ^ ap_const_lv1_1);
}

void image_filter_borderInterpolate::thread_tmp_s_fu_55_p2() {
    tmp_s_fu_55_p2 = (!len_cast4_cast_fu_51_p1.read().is_01() || !p.read().is_01())? sc_lv<1>(): (sc_bigint<12>(len_cast4_cast_fu_51_p1.read()) > sc_bigint<12>(p.read()));
}

}

